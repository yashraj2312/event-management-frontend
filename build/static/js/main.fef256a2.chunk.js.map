{"version":3,"sources":["services/api.js","user-context.js","pages/Login/index.js","pages/Register/index.js","pages/Dashboard/index.js","pages/EventsPage/index.js","pages/MyRegistrations/index.js","components/TopNav.js","routes.js","App.js","index.js","assets/camera.png"],"names":["api","axios","create","baseURL","UserContext","createContext","ContextWrapper","props","useState","localStorage","getItem","user","isLoggedIn","setIsloggedIn","Provider","value","children","Login","history","useContext","email","setEmail","password","setPassword","error","setError","errorMessage","setErrorMessage","handleSubmit","evt","a","preventDefault","post","response","user_id","data","setItem","push","message","setTimeout","Container","Form","onSubmit","className","FormGroup","Input","type","name","id","placeholder","onChange","target","Button","onClick","Alert","color","Register","firstName","setFirstName","lastName","setLastName","Dashboard","events","setEvents","rSelected","setRSelected","success","setSuccess","messageHandler","setMessageHandler","eventsRequest","setEventsRequest","dropdownOpen","setDropDownOpen","eventRequestMessage","setEventRequestMessage","eventRequestSuccess","setEventRequestSuccess","useEffect","getEvents","socket","useMemo","socketio","query","on","filterHandler","myEventsHandler","get","headers","filter","url","deleteEventHandler","eventId","delete","registrationRequestHandler","event","title","acceptEventHandler","removeNotificationFromDashboard","console","log","rejectEventHandler","newEvents","_id","map","request","key","ButtonGroup","Dropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","active","style","backgroundImage","thumbnail_url","size","moment","date","format","parseFloat","price","toFixed","description","EventsPage","setTitle","setDescription","setPrice","thumbnail","setThumbnail","sport","setSport","setDate","setOpen","preview","URL","createObjectURL","submitHandler","eventData","FormData","append","Promise","reject","sportEventHandler","Label","files","src","cameraIcon","maxWidth","alt","ButtonDropdown","disabled","MyRegistrations","myEvents","setMyEvents","getMyEvents","isApproved","approved","eventTitle","eventDate","eventPrice","userEmail","undefined","TopNav","collapsed","setCollapsed","Navbar","light","NavbarToggler","to","removeItem","Collapse","navbar","Nav","NavItem","Routes","path","exact","component","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fef256a2.chunk.js","sourcesContent":["import axios  from 'axios';  \n\nconst api = axios.create({\n    baseURL:'http://localhost:8000'\n})\n\nexport default api;","import React, { useState, createContext } from 'react';\n\nexport const UserContext = createContext();\n\nexport const ContextWrapper = (props) => {\n\n    const defaultValueHandler = () => {\n        const user = localStorage.getItem('user');\n        if (user) return true;\n        return false\n    }\n\n    const [isLoggedIn, setIsloggedIn] = useState(defaultValueHandler());\n    const user = {\n        isLoggedIn,\n        setIsloggedIn\n    }\n\n    return (\n        <UserContext.Provider value={user}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}","import React, { useState, useContext } from 'react';\nimport api from '../../services/api'\nimport { Alert, Container, Button, Form, FormGroup, Input } from 'reactstrap';\nimport { UserContext } from '../../user-context'\n\nexport default function Login({ history }) {\n    const { setIsloggedIn } = useContext(UserContext);\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [error, setError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(\"false\")\n\n    const handleSubmit = async evt => {\n        evt.preventDefault();\n        const response = await api.post('/login', { email, password })\n        const user_id = response.data.user_id || false;\n        const user = response.data.user || false;\n\n        try {\n            if (user && user_id) {\n                localStorage.setItem('user', user)\n                localStorage.setItem('user_id', user_id)\n                setIsloggedIn(true);\n                history.push('/')\n            } else {\n                const { message } = response.data\n                setError(true)\n                setErrorMessage(message)\n                setTimeout(() => {\n                    setError(false)\n                    setErrorMessage(\"\")\n                }, 2000)\n            }\n        } catch (error) {\n            setError(true)\n            setErrorMessage(\"Error, the server returned an error\")\n        }\n    }\n\n    return (\n        <Container>\n            <h2>Login:</h2>\n            <p>Please <strong>Login</strong> into your account</p>\n            <Form onSubmit={handleSubmit}>\n                <div className=\"input-group\">\n                    <FormGroup className=\"form-group-\"></FormGroup>\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Your email\" onChange={evt => setEmail(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Your password\" onChange={evt => setPassword(evt.target.value)} />\n                    </FormGroup>\n                </div>\n                <FormGroup>\n                    <Button className=\"submit-btn\">Log In</Button>\n                </FormGroup>\n                <FormGroup>\n                    <Button className=\"secondary-btn\" onClick={() => history.push(\"/register\")}>Sign Up</Button>\n                </FormGroup>\n            </Form>\n            {error ? (\n                <Alert className=\"event-validation\" color=\"danger\"> {errorMessage}</Alert>\n            ) : \"\"}\n        </Container>\n    );\n}","import React, { useState, useContext } from 'react';\nimport api from '../../services/api';\nimport { Button, Form, FormGroup, Container, Input, Alert } from 'reactstrap';\nimport { UserContext } from '../../user-context';\n\nexport default function Register({ history }) {\n    const { setIsloggedIn } = useContext(UserContext);\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n\n    const handleSubmit = async evt => {\n        evt.preventDefault();\n\n        if (email !== \"\" && password !== \"\" && firstName !== \"\" && lastName !== \"\") {\n            const response = await api.post('/user/register', { email, password, firstName, lastName })\n            const user = response.data.user || false;\n            const user_id = response.data.user_id || false;\n\n            if (user && user_id) {\n                localStorage.setItem('user', user)\n                localStorage.setItem('user_id', user_id)\n                setIsloggedIn(true)\n\n                history.push('/')\n            } else {\n                const { message } = response.data\n                setError(true)\n                setErrorMessage(message)\n                setTimeout(() => {\n                    setError(false)\n                    setErrorMessage(\"\")\n                }, 2000)\n            }\n        } else {\n            setError(true)\n            setErrorMessage(\"You need to fill all the Inputs\")\n            setTimeout(() => {\n                setError(false)\n                setErrorMessage(\"\")\n            }, 2000)\n\n        }\n\n    }\n\n    return (\n        <Container>\n            <h2>Register:</h2>\n            <p>Please <strong>Register</strong> for a new account</p>\n            <Form onSubmit={handleSubmit}>\n                <div className=\"input-group\">\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                        <Input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"Your first name\" onChange={evt => setFirstName(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                        <Input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Your last name\" onChange={evt => setLastName(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Your email\" onChange={evt => setEmail(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Your password\" onChange={evt => setPassword(evt.target.value)} />\n                    </FormGroup>\n                </div>\n                <FormGroup>\n                    <Button className=\"submit-btn\">Create Account</Button>\n                </FormGroup>\n                <FormGroup>\n                    <Button className=\"secondary-btn\" onClick={() => history.push(\"/login\")}>Already having Account? Sign In now</Button>\n                </FormGroup>\n            </Form>\n            {error ? (\n                <Alert className=\"event-validation\" color=\"danger\">{errorMessage}</Alert>\n            ) : \"\"}\n        </Container>\n    );\n}","import React, { useEffect, useState, useMemo } from 'react';\nimport api from '../../services/api';\nimport moment from 'moment';\nimport { Button, ButtonGroup, Alert, Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport socketio from 'socket.io-client';\nimport './dashboard.css'\n\n\nexport default function Dashboard({ history }) {\n    const [events, setEvents] = useState([])\n    const user = localStorage.getItem('user')\n    const user_id = localStorage.getItem('user_id')\n\n    const [rSelected, setRSelected] = useState(null)\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false)\n    const [messageHandler, setMessageHandler] = useState('')\n    const [eventsRequest, setEventsRequest] = useState([])\n    const [dropdownOpen, setDropDownOpen] = useState(false)\n    const [eventRequestMessage, setEventRequestMessage] = useState('')\n    const [eventRequestSuccess, setEventRequestSuccess] = useState(false)\n\n    const toggle = () => setDropDownOpen(!dropdownOpen);\n\n    useEffect(() => {\n        getEvents()\n    }, [])\n\n    const socket = useMemo(\n        () =>\n            socketio('http://localhost:8000/', { query: { user: user_id } }),\n        [user_id]\n    );\n\n    useEffect(() => {\n        socket.on('registration_request', data => setEventsRequest([...eventsRequest, data]));\n    }, [eventsRequest, socket])\n\n    const filterHandler = (query) => {\n        setRSelected(query)\n        getEvents(query)\n    }\n\n    const myEventsHandler = async () => {\n        try {\n            setRSelected('myevents')\n            const response = await api.get('/user/events', { headers: { user } })\n            setEvents(response.data.events)\n        } catch (error) {\n            history.push('/login');\n        }\n\n    }\n\n    const getEvents = async (filter) => {\n        try {\n            const url = filter ? `/dashboard/${filter}` : '/dashboard';\n            const response = await api.get(url, { headers: { user } })\n\n            setEvents(response.data.events)\n        } catch (error) {\n            history.push('/login');\n        }\n\n    };\n\n    const deleteEventHandler = async (eventId) => {\n        try {\n            await api.delete(`/event/${eventId}`, { headers: { user: user } });\n            setSuccess(true)\n            setMessageHandler('The event was deleted successfully!')\n            setTimeout(() => {\n                setSuccess(false)\n                filterHandler(null)\n                setMessageHandler('')\n            }, 2500)\n\n        } catch (error) {\n            setError(true)\n            setMessageHandler('Error when deleting event!')\n            setTimeout(() => {\n                setError(false)\n                setMessageHandler('')\n            }, 2000)\n        }\n    }\n\n    const registrationRequestHandler = async (event) => {\n        try {\n            await api.post(`/registration/${event.id}`, {}, { headers: { user } })\n            setSuccess(true)\n            setMessageHandler(`The request for the event ${event.title} was successfully!`)\n            setTimeout(() => {\n                setSuccess(false)\n                filterHandler(null)\n                setMessageHandler('')\n            }, 2500)\n\n        } catch (error) {\n            setError(true)\n            setMessageHandler(`The request for the event ${event.title} wasn't successfully!`)\n            setTimeout(() => {\n                setError(false)\n                setMessageHandler('')\n            }, 2000)\n        }\n    }\n\n    const acceptEventHandler = async (eventId) => {\n        try {\n            await api.post(`/registration/${eventId}/approvals`, {}, { headers: { user } })\n            setEventRequestSuccess(true)\n            setEventRequestMessage('Event approved successfully!')\n            removeNotificationFromDashboard(eventId)\n            setTimeout(() => {\n                setEventRequestSuccess(false)\n                setEventRequestMessage('')\n            }, 2000)\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const rejectEventHandler = async (eventId) => {\n        try {\n            await api.post(`/registration/${eventId}/rejections`, {}, { headers: { user } })\n            setEventRequestSuccess(true)\n            setEventRequestMessage('Event rejected successfully!')\n            removeNotificationFromDashboard(eventId)\n            setTimeout(() => {\n                setEventRequestSuccess(false)\n                setEventRequestMessage('')\n            }, 2000)\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const removeNotificationFromDashboard = (eventId) => {\n        const newEvents = eventsRequest.filter((event) => event._id !== eventId)\n        setEventsRequest(newEvents)\n    }\n\n    return (\n        <>\n            <ul className=\"notifications\">\n                {eventsRequest.map(request => {\n                    return (\n                        <li key={request._id}>\n                            <div>\n                                <strong>{request.user.email} </strong> is requesting to register for your Event <strong>{request.event.title}</strong>\n                            </div>\n                            <ButtonGroup>\n                                <Button color=\"secondary\" onClick={() => acceptEventHandler(request._id)}>Accept</Button>\n                                <Button color=\"danger\" onClick={() => rejectEventHandler(request._id)}>Reject</Button>\n                            </ButtonGroup>\n                        </li>\n                    )\n                })}\n            </ul>\n            {eventRequestSuccess ? <Alert color=\"success\"> {eventRequestMessage}</Alert> : \"\"}\n            <div className=\"filter-panel\">\n                <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <DropdownToggle color=\"primary\" caret>\n                        Filter\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem onClick={() => filterHandler(null)} active={rSelected === null} >All Events</DropdownItem>\n                        <DropdownItem onClick={myEventsHandler} active={rSelected === 'myevents'} >My Events</DropdownItem>\n                        <DropdownItem onClick={() => filterHandler(\"hackathon\")} active={rSelected === 'hackathon'} >Hackathon</DropdownItem>\n                        <DropdownItem onClick={() => filterHandler(\"bootcamp\")} active={rSelected === 'bootcamp'} >Bootcamp</DropdownItem>\n                        <DropdownItem color=\"primary\" onClick={() => filterHandler('summit')} active={rSelected === 'summit'} >Summit</DropdownItem>\n                    </DropdownMenu>\n                </Dropdown>\n            </div>\n            <ul className=\"events-list\">\n                {events.map(event => (\n                    < li key={event._id} >\n                        <header style={{ backgroundImage: `url(${event.thumbnail_url})` }}>\n                            {event.user === user_id ? <div><Button color=\"danger\" size=\"sm\" onClick={() => deleteEventHandler(event._id)}>Delete</Button></div> : \"\"}\n\n                        </header>\n                        <strong>{event.title}</strong>\n                        <span>Event Date: {moment(event.date).format('l')}</span>\n                        <span>Event Price: {parseFloat(event.price).toFixed(2)}</span>\n                        <span>Event Description: {event.description}</span>\n                        <Button color=\"primary\" onClick={() => registrationRequestHandler(event)}>Registration Request</Button>\n                    </li>\n                ))}\n            </ul>\n            {\n                error ? (\n                    <Alert className=\"event-validation\" color=\"danger\"> {messageHandler} </Alert>\n                ) : \"\"\n            }\n            {\n                success ? (\n                    <Alert className=\"event-validation\" color=\"success\"> {messageHandler}</Alert>\n                ) : \"\"\n            }\n        </>\n    )\n}","import React, { useState, useMemo, useEffect } from 'react';\nimport api from '../../services/api';\nimport { Alert, Container, Button, Form, FormGroup, Input, Label, DropdownItem, DropdownMenu, DropdownToggle, ButtonDropdown } from 'reactstrap';\nimport cameraIcon from '../../assets/camera.png'\nimport \"./events.css\";\n\nexport default function EventsPage({ history }) {\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [thumbnail, setThumbnail] = useState(null)\n    const [sport, setSport] = useState('Type')\n    const [date, setDate] = useState('')\n    const [error, setError] = useState(false)\n    const [success, setSuccess] = useState(false)\n    const [dropdownOpen, setOpen] = useState(false);\n    const user = localStorage.getItem('user');\n\n    useEffect(() => {\n        if (!user) history.push('/login');\n    }, [])\n\n    const toggle = () => setOpen(!dropdownOpen);\n\n    const preview = useMemo(() => {\n        return thumbnail ? URL.createObjectURL(thumbnail) : null;\n    }, [thumbnail])\n\n    const submitHandler = async (evt) => {\n        evt.preventDefault()\n\n        const eventData = new FormData();\n\n        eventData.append(\"thumbnail\", thumbnail)\n        eventData.append(\"sport\", sport)\n        eventData.append(\"title\", title)\n        eventData.append(\"price\", price)\n        eventData.append(\"description\", description)\n        eventData.append(\"date\", date)\n\n\n        try {\n            if (title !== \"\" &&\n                description !== \"\" &&\n                price !== \"\" &&\n                sport !== \"Sport\" &&\n                date !== \"\" &&\n                thumbnail !== null\n            ) {\n                await api.post(\"/event\", eventData, { headers: { user } })\n                setSuccess(true)\n                setTimeout(() => {\n                    setSuccess(false)\n                    history.push(\"/\")\n                }, 2000)\n            } else {\n                setError(true)\n                setTimeout(() => {\n                    setError(false)\n                }, 2000)\n            }\n        } catch (error) {\n            Promise.reject(error);\n            console.log(error);\n        }\n    }\n\n    const sportEventHandler = (sport) => setSport(sport);\n\n    return (\n        <Container>\n            <h2>Create your Event</h2>\n            <Form onSubmit={submitHandler}>\n                <div className=\"input-group\">\n                    <FormGroup>\n                        <Label>Upload Image: </Label>\n                        <Label id='thumbnail' style={{ backgroundImage: `url(${preview})` }} className={thumbnail ? 'has-thumbnail' : ''}>\n                            <Input type=\"file\" onChange={evt => setThumbnail(evt.target.files[0])} />\n                            <img src={cameraIcon} style={{ maxWidth: \"50px\" }} alt=\"upload icon image\" />\n                        </Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Title: </Label>\n                        <Input id=\"title\" type=\"text\" value={title} placeholder={'Event Title'} onChange={(evt) => setTitle(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Event description: </Label>\n                        <Input id=\"description\" type=\"text\" value={description} placeholder={'Event Description'} onChange={(evt) => setDescription(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Event price: </Label>\n                        <Input id=\"price\" type=\"text\" value={price} placeholder={'Event Price ₹0.00'} onChange={(evt) => setPrice(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Event date: </Label>\n                        <Input id=\"date\" type=\"date\" value={date} placeholder={'Event Price ₹0.00'} onChange={(evt) => setDate(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n                            <Button id=\"caret\" value={sport} disabled>{sport}</Button>\n                            <DropdownToggle caret />\n                            <DropdownMenu>\n                                <DropdownItem onClick={() => sportEventHandler('hackathon')}>Hackathon</DropdownItem>\n                                <DropdownItem onClick={() => sportEventHandler('bootcamp')}>Bootcamp</DropdownItem>\n                                <DropdownItem onClick={() => sportEventHandler('summit')}>Summit</DropdownItem>\n                            </DropdownMenu>\n                        </ButtonDropdown>\n                    </FormGroup>\n                </div>\n                <FormGroup>\n                    <Button className=\"submit-btn\">Submit</Button>\n                </FormGroup>\n                <FormGroup>\n                    <Button className=\"secondary-btn\" onClick={() => history.push(\"/\")}>\n                        Cancel\n                    </Button>\n                </FormGroup>\n            </Form>\n            {error ? (\n                <Alert className=\"event-validation\" color=\"danger\"> Missing required information</Alert>\n            ) : \"\"}\n            {success ? (\n                <Alert className=\"event-validation\" color=\"success\"> The event was created successfully!</Alert>\n            ) : \"\"}\n        </Container>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport moment from 'moment';\nimport api from '../../services/api'\nimport { Button, ButtonGroup } from 'reactstrap';\nimport './style.css'\n\n\nexport default function MyRegistrations() {\n    const [myEvents, setMyEvents] = useState([])\n    const user = localStorage.getItem('user')\n\n    useEffect(() => {\n        getMyEvents()\n    }, [])\n\n    const getMyEvents = async () => {\n        try {\n            const response = await api.get('/registration', { headers: { user } })\n            console.log(response.data)\n            setMyEvents(response.data)\n        } catch (error) {\n\n        }\n\n    }\n\n    const isApproved = (approved) => approved === true ? \"Approved\" : \"Rejected\"\n\n    const acceptEventHandler = async (eventId) => {\n        try {\n            await api.post(`/registration/${eventId}/approvals`, {}, { headers: { user } })\n            getMyEvents()\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const rejectEventHandler = async (eventId) => {\n        try {\n            await api.post(`/registration/${eventId}/rejections`, {}, { headers: { user } })\n            getMyEvents()\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <ul className=\"events\">\n            {myEvents.map(event => (\n                <li key={event._id}>\n                    <div><strong>{event.eventTitle}</strong></div>\n                    <div className=\"events-details\">\n                        <span>Event Date: {moment(event.eventDate).format('l')}</span>\n                        <span>Event Price: £{parseFloat(event.eventPrice).toFixed(2)}</span>\n                        <span>User Email: {event.userEmail}</span>\n                        <span>Status:\n                            <span className={event.approved !== undefined ? isApproved(event.approved) : \"Pending\"}>{event.approved !== undefined ? isApproved(event.approved) : \"Pending\"}</span>\n                        </span>\n                    </div>\n                    <ButtonGroup>\n                        <Button disabled={event.approved === true || event.approved === false ? true : false} color=\"secondary\" onClick={() => acceptEventHandler(event._id)}>Accept</Button>\n                        <Button disabled={event.approved === true || event.approved === false ? true : false} color=\"danger\" onClick={() => rejectEventHandler(event._id)}>Reject</Button>\n                    </ButtonGroup>\n                </li>\n            ))}\n        </ul>\n    )\n}","import React, { useState, useContext } from 'react';\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../user-context'\n\nconst TopNav = () => {\n    const { isLoggedIn, setIsloggedIn } = useContext(UserContext);\n\n    const [collapsed, setCollapsed] = useState(true);\n    const toggleNavbar = () => setCollapsed(!collapsed);\n\n    const logoutHandler = () => {\n        localStorage.removeItem('user')\n        localStorage.removeItem('user_id')\n        setIsloggedIn(false)\n    }\n\n    return isLoggedIn ? \n        <div>\n            <Navbar color=\"faded\" light>\n                <NavbarToggler onClick={toggleNavbar} />\n                <Link to=\"/login\" onClick={logoutHandler}>Logout</Link>\n                <Collapse isOpen={!collapsed} navbar>\n                    <Nav navbar>\n                        <NavItem>\n                            <Link to=\"/events\">Events</Link>\n                        </NavItem>\n                        <NavItem>\n                            <Link to=\"/\">Dashboard</Link>\n                        </NavItem>\n                        <NavItem>\n                            <Link to=\"/myregistrations\">My Registrations</Link>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </div>\n    : \"\"\n}\n\nexport default TopNav;","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login'\nimport Register from './pages/Register'\nimport Dashboard from './pages/Dashboard'\nimport EventsPage from './pages/EventsPage'\nimport MyRegistrations from './pages/MyRegistrations'\nimport TopNav from './components/TopNav'\n\n\nexport default function Routes() {\n    return (\n        <BrowserRouter>\n            <TopNav />\n            <Switch>\n                <Route path='/' exact component={Dashboard} />\n                <Route path='/myregistrations' exact component={MyRegistrations} />\n                <Route path='/login' exact component={Login} />\n                <Route path='/register' exact component={Register} />\n                <Route path='/events' component={EventsPage} />\n            </Switch>\n        </BrowserRouter>\n    );\n}","import React from 'react';\nimport { Container } from 'reactstrap'\nimport Routes from './routes';\nimport { ContextWrapper } from './user-context'\nimport './App.css';\n\nfunction App() {\n  return (\n    <ContextWrapper>\n      <Container>\n        <h1>Event Management App</h1>\n        <div className=\"content\">\n          <Routes />\n        </div>\n      </Container>\n    </ContextWrapper>\n  );\n}\n\nexport default App;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/camera.91a960a0.png\";"],"sourceRoot":""}